// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.747
package partials

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "fmt"
import "bca-go-final/internal/types"
import "bca-go-final/internal/views/components"

func budgetValText(budget *types.CreateBudget, text string) string {
	if budget == nil {
		if text == "total" {
			return "0.00"
		}
		return ""
	}

	switch text {
	case "project":
		return budget.ProjectId.String()
	case "budgetItem":
		return budget.BudgetItemId.String()
	case "quantity":
		return fmt.Sprintf("%.2f", budget.Quantity)
	case "cost":
		return fmt.Sprintf("%.2f", budget.Cost)
	case "total":
		return fmt.Sprintf("%.2f", budget.Cost*budget.Quantity)
	default:
		return ""
	}
}

func EditBudget(budget *types.CreateBudget, projects, budgetItems []types.Select) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<form id=\"budget-form\" autocomplete=\"off\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if budget == nil {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" hx-post=\"/bca/partials/budgets\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		} else {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" hx-put=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var2 string
			templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("/bca/partials/budgets/%s/%s", budget.ProjectId.String(), budget.BudgetItemId.String()))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/views/bca/transaction/partials/editbudget.templ`, Line: 38, Col: 114}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" hx-trigger=\"submit\" hx-target=\"#budget-table\" hx-target-error=\"#error\" hx-swap=\"innerHTML\" hx-on=\"htmx:afterOnLoad: handleHtmxError(event)\"><div class=\"flex flex-col h-full gap-8\"><div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if budget == nil {
			templ_7745c5c3_Err = components.DrawerTitle("Agregar Presupuesto").Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		} else {
			templ_7745c5c3_Err = components.DrawerTitle("Editar Presupuesto").Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div id=\"error\" class=\"text-red-600 text-sm\"></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.SelectComponent(projects, "Seleccione un Proyecto", "project", "project", budgetValText(budget, "project"), "Proyecto").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.SelectComponent(budgetItems, "Seleccione una Partida", "budgetItem", "budgetItem", budgetValText(budget, "budgetItem"), "Partida").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Input("text", "Cantidad", "quantity", "quantity", budgetValText(budget, "quantity")).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Input("text", "Unitario", "cost", "cost", budgetValText(budget, "cost")).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Input("text", "Total", "total", "total", budgetValText(budget, "total")).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.ButtonGroup().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></form><script>\n         var quantity = document.getElementById(\"quantity\")\n         var costo = document.getElementById(\"cost\")\n         var total = document.getElementById(\"total\")\n         var b = document.getElementById(\"save-button\")\n\n         total.disabled = true\n\n         costo.addEventListener(\"input\", setTotal)\n         quantity.addEventListener(\"input\", setTotal)\n\n         function handleHtmxError(event) {\n              document.getElementById(\"error\").innerHTML = \"\"\n              if (event.detail.xhr.status === 200) {\n                   resetClose()\n                   return\n              }\n              document.getElementById(\"error\").innerHTML = event.detail.xhr.response\n         }\n\n         function setTotal() {\n              if (isNaN(quantity.value)) {\n                   total.classList.add(\"error-border\")\n                   quantity.classList.add(\"error-border\")\n                   b.disabled = true\n                   total.value = \"0.00\"\n                   return\n              }\n\n              if (isNaN(costo.value)) {\n                   total.classList.add(\"error-border\")\n                   costo.classList.add(\"error-border\")\n                   b.disabled = true\n                   total.value = \"0.00\"\n                   return\n              }\n\n              total.classList.remove(\"error-border\")\n              quantity.classList.remove(\"error-border\")\n              costo.classList.remove(\"error-border\")\n              b.disabled = false\n              const q = quantity.value === \"\" ? 0 : parseFloat(quantity.value)\n              const c = costo.value === \"\" ? 0 : parseFloat(costo.value)\n\n              total.value = (q * c).toLocaleString()\n         }\n\n         function resetClose() {\n              closeDrawer()\n         }\n     </script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}
