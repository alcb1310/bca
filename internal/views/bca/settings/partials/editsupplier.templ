package partials

import "bca-go-final/internal/types"
import "bca-go-final/internal/views/components"

func validText(supplier *types.Supplier, text string) string {
	if supplier == nil {
		return ""
	}
	switch text {
	case "supplier_id":
		return supplier.SupplierId
	case "supplier_name":
		return supplier.Name
	case "contact_name":
		if supplier.ContactName == nil {
			return ""
		}
		return *supplier.ContactName
	case "contact_email":
		if supplier.ContactEmail == nil {
			return ""
		}
		return *supplier.ContactEmail
	case "contact_phone":
		if supplier.ContactPhone == nil {
			return ""
		}
		return *supplier.ContactPhone
	default:
		return ""
	}
}

templ EditSupplier(supplier *types.Supplier) {
	<form
		id="edit-supplier"
		autocomplete="off"
		if supplier == nil {
			hx-post="/bca/partials/suppliers"
		} else {
			hx-put={ concat("/bca/partials/suppliers/edit/", supplier.ID.String()) }
		}
		hx-swap="innerHTML"
		hx-target="#supplier-table"
		hx-target-error="#error"
		hx-on="htmx:responseError: handleHtmxError(event)
          htmx:afterOnLoad: handleHtmxError(event)"
	>
		<div class="flex h-full flex-col gap-8">
			<div>
				@components.DrawerTitle("Agregar Proveedor")
				<div id="error" class="text-red-600 text-sm"></div>
				@components.Input("text", "Ruc", "supplier_id", "supplier_id", validText(supplier, "supplier_id"))
				@components.Input("text", "Nombre", "name", "name", validText(supplier, "supplier_name"))
				@components.Input("text", "Nombre del contacto", "contact_name", "contact_name", validText(supplier, "contact_name"))
				@components.Input("text", "Email del contacto", "contact_email", "contact_email", validText(supplier, "contact_email"))
				@components.Input("text", "Tel√©fono del contacto", "contact_phone", "contact_phone", validText(supplier, "contact_phone"))
			</div>
			@components.ButtonGroup()
		</div>
	</form>
	<script>
         function handleHtmxError(event) {
              document.getElementById("error").innerHTML = ""
              if (event.detail.xhr.status === 200) {
                   resetClose()
                   return
              }
              document.getElementById("error").innerHTML = event.detail.xhr.response
         }
         function resetClose() {
              closeDrawer()
         }
    </script>
}
