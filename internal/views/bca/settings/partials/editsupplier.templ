package partials

import (
"fmt"
"github.com/alcb1310/bca/internal/types"
"github.com/alcb1310/bca/internal/views/components"
)

func supplierValidText(supplier *types.Supplier, text string) string {
if supplier == nil {
return ""
}
switch text {
case "supplier_id":
return supplier.SupplierId
case "supplier_name":
return supplier.Name
case "contact_name":
return supplier.ContactName.String
case "contact_email":
return supplier.ContactEmail.String
case "contact_phone":
return supplier.ContactPhone.String
default:
return ""
}
}

templ EditSupplier(supplier *types.Supplier) {
<form id="edit-supplier" autocomplete="off" if supplier==nil { hx-post="/bca/partials/suppliers" } else { hx-put={
  fmt.Sprintf("/bca/partials/suppliers/edit/%s", supplier.ID.String()) } } hx-swap="innerHTML"
  hx-target="#supplier-table" hx-target-error="#error" hx-on="htmx:afterOnLoad: handleHtmxError(event)">
  <div class="flex h-full flex-col gap-8">
    <div>
      if supplier == nil {
      @components.DrawerTitle("Agregar Proveedor")
      } else {
      @components.DrawerTitle("Editar Proveedor")
      }
      <div id="error" class="text-red-600 text-sm"></div>
      @components.Input("text", "Ruc", "supplier_id", "supplier_id", supplierValidText(supplier, "supplier_id"))
      @components.Input("text", "Nombre", "name", "name", supplierValidText(supplier, "supplier_name"))
      @components.Input("text", "Nombre del contacto", "contact_name", "contact_name", supplierValidText(supplier,
      "contact_name"))
      @components.Input("text", "Email del contacto", "contact_email", "contact_email", supplierValidText(supplier,
      "contact_email"))
      @components.Input("text", "Tel√©fono del contacto", "contact_phone", "contact_phone", supplierValidText(supplier,
      "contact_phone"))
    </div>
    @components.ButtonGroup()
  </div>
</form>
<script>
  function handleHtmxError(event) {
    document.getElementById("error").innerHTML = ""
    if (event.detail.xhr.status === 200) {
      resetClose()
      return
    }
    document.getElementById("error").innerHTML = event.detail.xhr.response
  }
  function resetClose() {
    closeDrawer()
  }
</script>
}
