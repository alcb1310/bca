package partials

import "bca-go-final/internal/types"
import "bca-go-final/internal/views/base"
import "bca-go-final/internal/views/components"

func setRubroTitle(rubro *types.Rubro) string {
  if rubro == nil {
    return "Nuevo Rubro"
  }
  return "Editar Rubro"
}

func rubroValText(rubro *types.Rubro, text string) string {
  if rubro == nil {
    return ""
  }

  switch text {
  case "code":
    return rubro.Code
  case "name":
    return rubro.Name
  case "unit":
    return rubro.Unit
  default:
    return ""
  }
}

templ EditRubros(rubro *types.Rubro) {
	@base.AuthenticatedLayout(setRubroTitle(rubro)) {
    @components.PageTitle(setRubroTitle(rubro))
    <div id="response-targets">
      <form
        id="rubro-form"
        autocomplete="off"
        hx-trigger="submit"
        hx-target="html"
        hx-swap="innerHTML"
        if rubro == nil {
          hx-post="/bca/configuracion/rubros/crear"
        } else {
          hx-put={ concat("/bca/configuracion/rubros/crear?id=", rubro.Id.String()) }
        }
        hx-target-error="find #error"
        hx-on="htmx:afterRequest: htmxHandleError(event)"
      >
				<div class="flex flex-col h-full gap-8">
					<div class="w-1/2 my-0 mx-auto">
						<div id="error" class="text-red-500 text-sm"></div>
            @components.Input("text", "CoÃÅdigo", "code", "code", rubroValText(rubro, "code"))
            @components.Input("text", "Nombre", "name", "name", rubroValText(rubro, "name"))
            @components.Input("text", "Unidad", "unit", "unit", rubroValText(rubro, "unit"))
          </div>
        </div>
        <div class="flex justify-around">
          <button type="submit" class="btn">Grabar</button>
          if rubro != nil {
            <button
              type="button"
              class="btn"
              hx-put={ concat("/bca/partials/rubros/", rubro.Id.String()) }
              hx-target="#drawer"
              hx-swap="innerHTML"
              hx-trigger="click"
              hx-push-url="false"
              _="on click openDrawer()"
            >Material</button>
          }
          <a
            href="/bca/configuracion/rubros"
            class="btn"
          >
            Cancelar
          </a>
        </div>
      </form>
    </div>
    if rubro != nil {
      <div
        style="margin-top: 1rem"
        id="rubro-details"
        hx-get={ concat("/bca/partials/rubros/", rubro.Id.String()) }
        hx-trigger="load"
        hx-swap="innerHTML"
      ></div>
    }
  }
  <script>
    function htmxHandleError(event) {
         document.getElementById("error").innerHTML = ""
         if (event.detail.xhr.status >= 400) {
              document.getElementById("error").innerHTML = event.detail.xhr.response
         }
    }
  </script>
}

/*
        */
